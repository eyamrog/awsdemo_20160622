{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Web Server Fleet in a VPC in AWS",
  "Parameters": {
      "S3BucketName": {
        "Description": "The name of the existing S3 bucket where you stored the Web Server files",
        "Type": "String",
        "Default": "eyamrog-demo-20160622-2",
        "AllowedPattern": "[-.a-z0-9]*",
        "ConstraintDescription": "Bucket names can contain lowercase letters, numbers, hyphens and periods (.)"
      },
      "InstanceType": {
        "Description": "WebServer EC2 instance type",
        "Type": "String",
        "Default": "t2.micro",
        "AllowedValues": [
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge",
          "m3.medium",
          "m3.large",
          "m3.xlarge",
          "m3.2xlarge",
          "m4.large",
          "m4.xlarge",
          "m4.2xlarge",
          "m4.4xlarge",
          "m4.10xlarge",
          "m4.16xlarge",
          "c3.large",
          "c3.xlarge",
          "c3.2xlarge",
          "c3.4xlarge",
          "c3.8xlarge",
          "c4.large",
          "c4.xlarge",
          "c4.2xlarge",
          "c4.4xlarge",
          "c4.8xlarge",
          "c5.large",
          "c5.xlarge",
          "c5.2xlarge",
          "c5.4xlarge",
          "c5.9xlarge",
          "c5.18xlarge",
          "r3.large",
          "r3.xlarge",
          "r3.2xlarge",
          "r3.4xlarge",
          "r3.8xlarge",
          "r4.large",
          "r4.xlarge",
          "r4.2xlarge",
          "r4.4xlarge",
          "r4.8xlarge",
          "r4.16xlarge",
          "x1.16xlarge",
          "x1.32xlarge",
          "x1e.32xlarge",
          "d2.xlarge",
          "d2.2xlarge",
          "d2.4xlarge",
          "d2.8xlarge",
          "i2.xlarge",
          "i2.2xlarge",
          "i2.4xlarge",
          "i2.8xlarge",
          "i3.large",
          "i3.xlarge",
          "i3.2xlarge",
          "i3.4xlarge",
          "i3.8xlarge",
          "i3.16xlarge",
          "f1.2xlarge",
          "f1.16xlarge",
          "g2.2xlarge",
          "g2.8xlarge",
          "g3.4xlarge",
          "g3.8xlarge",
          "g3.16xlarge",
          "p2.xlarge",
          "p2.8xlarge",
          "p2.16xlarge",
          "p3.2xlarge",
          "p3.8xlarge",
          "p3.16xlarge"
        ],
        "ConstraintDescription": "Must be a valid EC2 instance type."
      },
      "KeyName": {
        "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
        "Type": "AWS::EC2::KeyPair::KeyName",
        "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
      },
      "SSHLocation": {
        "Description": "The IP address range that can be used to SSH to the EC2 instances",
        "Type": "String",
        "MinLength": "9",
        "MaxLength": "18",
        "Default": "0.0.0.0/0",
        "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
        "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
      }
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "t2.nano": {
        "Arch": "HVM64"
      },
      "t2.micro": {
        "Arch": "HVM64"
      },
      "t2.small": {
        "Arch": "HVM64"
      },
      "t2.medium": {
        "Arch": "HVM64"
      },
      "t2.large": {
        "Arch": "HVM64"
      },
      "t2.xlarge": {
        "Arch": "HVM64"
      },
      "t2.2xlarge": {
        "Arch": "HVM64"
      },
      "m3.medium": {
        "Arch": "HVM64"
      },
      "m3.large": {
        "Arch": "HVM64"
      },
      "m3.xlarge": {
        "Arch": "HVM64"
      },
      "m3.2xlarge": {
        "Arch": "HVM64"
      },
      "m4.large": {
        "Arch": "HVM64"
      },
      "m4.xlarge": {
        "Arch": "HVM64"
      },
      "m4.2xlarge": {
        "Arch": "HVM64"
      },
      "m4.4xlarge": {
        "Arch": "HVM64"
      },
      "m4.10xlarge": {
        "Arch": "HVM64"
      },
      "m4.16xlarge": {
        "Arch": "HVM64"
      },
      "c3.large": {
        "Arch": "HVM64"
      },
      "c3.xlarge": {
        "Arch": "HVM64"
      },
      "c3.2xlarge": {
        "Arch": "HVM64"
      },
      "c3.4xlarge": {
        "Arch": "HVM64"
      },
      "c3.8xlarge": {
        "Arch": "HVM64"
      },
      "c4.large": {
        "Arch": "HVM64"
      },
      "c4.xlarge": {
        "Arch": "HVM64"
      },
      "c4.2xlarge": {
        "Arch": "HVM64"
      },
      "c4.4xlarge": {
        "Arch": "HVM64"
      },
      "c4.8xlarge": {
        "Arch": "HVM64"
      },
      "c5.large": {
        "Arch": "HVM64"
      },
      "c5.xlarge": {
        "Arch": "HVM64"
      },
      "c5.2xlarge": {
        "Arch": "HVM64"
      },
      "c5.4xlarge": {
        "Arch": "HVM64"
      },
      "c5.9xlarge": {
        "Arch": "HVM64"
      },
      "c5.18xlarge": {
        "Arch": "HVM64"
      },
      "r3.large": {
        "Arch": "HVM64"
      },
      "r3.xlarge": {
        "Arch": "HVM64"
      },
      "r3.2xlarge": {
        "Arch": "HVM64"
      },
      "r3.4xlarge": {
        "Arch": "HVM64"
      },
      "r3.8xlarge": {
        "Arch": "HVM64"
      },
      "r4.large": {
        "Arch": "HVM64"
      },
      "r4.xlarge": {
        "Arch": "HVM64"
      },
      "r4.2xlarge": {
        "Arch": "HVM64"
      },
      "r4.4xlarge": {
        "Arch": "HVM64"
      },
      "r4.8xlarge": {
        "Arch": "HVM64"
      },
      "r4.16xlarge": {
        "Arch": "HVM64"
      },
      "x1.16xlarge": {
        "Arch": "HVM64"
      },
      "x1.32xlarge": {
        "Arch": "HVM64"
      },
      "x1e.32xlarge": {
        "Arch": "HVM64"
      },
      "d2.xlarge": {
        "Arch": "HVM64"
      },
      "d2.2xlarge": {
        "Arch": "HVM64"
      },
      "d2.4xlarge": {
        "Arch": "HVM64"
      },
      "d2.8xlarge": {
        "Arch": "HVM64"
      },
      "i2.xlarge": {
        "Arch": "HVM64"
      },
      "i2.2xlarge": {
        "Arch": "HVM64"
      },
      "i2.4xlarge": {
        "Arch": "HVM64"
      },
      "i2.8xlarge": {
        "Arch": "HVM64"
      },
      "i3.large": {
        "Arch": "HVM64"
      },
      "i3.xlarge": {
        "Arch": "HVM64"
      },
      "i3.2xlarge": {
        "Arch": "HVM64"
      },
      "i3.4xlarge": {
        "Arch": "HVM64"
      },
      "i3.8xlarge": {
        "Arch": "HVM64"
      },
      "i3.16xlarge": {
        "Arch": "HVM64"
      },
      "f1.2xlarge": {
        "Arch": "HVM64"
      },
      "f1.16xlarge": {
        "Arch": "HVM64"
      },
      "g2.2xlarge": {
        "Arch": "HVM64"
      },
      "g2.8xlarge": {
        "Arch": "HVM64"
      },
      "g3.4xlarge": {
        "Arch": "HVM64"
      },
      "g3.8xlarge": {
        "Arch": "HVM64"
      },
      "g3.16xlarge": {
        "Arch": "HVM64"
      },
      "p2.xlarge": {
        "Arch": "HVM64"
      },
      "p2.8xlarge": {
        "Arch": "HVM64"
      },
      "p2.16xlarge": {
        "Arch": "HVM64"
      },
      "p3.2xlarge": {
        "Arch": "HVM64"
      },
      "p3.8xlarge": {
        "Arch": "HVM64"
      },
      "p3.16xlarge": {
        "Arch": "HVM64"
      }
    },
    "AWSInstanceType2NATArch": {
      "t2.nano": {
        "Arch": "NATHVM64"
      },
      "t2.micro": {
        "Arch": "NATHVM64"
      },
      "t2.small": {
        "Arch": "NATHVM64"
      },
      "t2.medium": {
        "Arch": "NATHVM64"
      },
      "t2.large": {
        "Arch": "NATHVM64"
      },
      "t2.xlarge": {
        "Arch": "NATHVM64"
      },
      "t2.2xlarge": {
        "Arch": "NATHVM64"
      },
      "m3.medium": {
        "Arch": "NATHVM64"
      },
      "m3.large": {
        "Arch": "NATHVM64"
      },
      "m3.xlarge": {
        "Arch": "NATHVM64"
      },
      "m3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "m4.large": {
        "Arch": "NATHVM64"
      },
      "m4.xlarge": {
        "Arch": "NATHVM64"
      },
      "m4.2xlarge": {
        "Arch": "NATHVM64"
      },
      "m4.4xlarge": {
        "Arch": "NATHVM64"
      },
      "m4.10xlarge": {
        "Arch": "NATHVM64"
      },
      "m4.16xlarge": {
        "Arch": "NATHVM64"
      },
      "c3.large": {
        "Arch": "NATHVM64"
      },
      "c3.xlarge": {
        "Arch": "NATHVM64"
      },
      "c3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "c3.4xlarge": {
        "Arch": "NATHVM64"
      },
      "c3.8xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.large": {
        "Arch": "NATHVM64"
      },
      "c4.xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.2xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.4xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.8xlarge": {
        "Arch": "NATHVM64"
      },
      "c5.large": {
        "Arch": "NATHVM64"
      },
      "c5.xlarge": {
        "Arch": "NATHVM64"
      },
      "c5.2xlarge": {
        "Arch": "NATHVM64"
      },
      "c5.4xlarge": {
        "Arch": "NATHVM64"
      },
      "c5.9xlarge": {
        "Arch": "NATHVM64"
      },
      "c5.18xlarge": {
        "Arch": "NATHVM64"
      },
      "r3.large": {
        "Arch": "NATHVM64"
      },
      "r3.xlarge": {
        "Arch": "NATHVM64"
      },
      "r3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "r3.4xlarge": {
        "Arch": "NATHVM64"
      },
      "r3.8xlarge": {
        "Arch": "NATHVM64"
      },
      "r4.large": {
        "Arch": "NATHVM64"
      },
      "r4.xlarge": {
        "Arch": "NATHVM64"
      },
      "r4.2xlarge": {
        "Arch": "NATHVM64"
      },
      "r4.4xlarge": {
        "Arch": "NATHVM64"
      },
      "r4.8xlarge": {
        "Arch": "NATHVM64"
      },
      "r4.16xlarge": {
        "Arch": "NATHVM64"
      },
      "x1.16xlarge": {
        "Arch": "NATHVM64"
      },
      "x1.32xlarge": {
        "Arch": "NATHVM64"
      },
      "x1e.32xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.2xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.4xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.8xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.2xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.4xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.8xlarge": {
        "Arch": "NATHVM64"
      },
      "i3.large": {
        "Arch": "NATHVM64"
      },
      "i3.xlarge": {
        "Arch": "NATHVM64"
      },
      "i3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "i3.4xlarge": {
        "Arch": "NATHVM64"
      },
      "i3.8xlarge": {
        "Arch": "NATHVM64"
      },
      "i3.16xlarge": {
        "Arch": "NATHVM64"
      },
      "f1.2xlarge": {
        "Arch": "NATHVM64"
      },
      "f1.16xlarge": {
        "Arch": "NATHVM64"
      },
      "g2.2xlarge": {
        "Arch": "NATHVM64"
      },
      "g2.8xlarge": {
        "Arch": "NATHVM64"
      },
      "g3.4xlarge": {
        "Arch": "NATHVM64"
      },
      "g3.8xlarge": {
        "Arch": "NATHVM64"
      },
      "g3.16xlarge": {
        "Arch": "NATHVM64"
      },
      "p2.xlarge": {
        "Arch": "NATHVM64"
      },
      "p2.8xlarge": {
        "Arch": "NATHVM64"
      },
      "p2.16xlarge": {
        "Arch": "NATHVM64"
      },
      "p3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "p3.8xlarge": {
        "Arch": "NATHVM64"
      },
      "p3.16xlarge": {
        "Arch": "NATHVM64"
      }
    }
  },
  "Resources": {
    "VirtualPrivateCloud": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Virtual Private Cloud"
          }
        ]
      }
    },
    "SubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]        
        },
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Subnet A"
          }
        ]
      }
    },
    "SubnetB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]        
        },
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Subnet B"
          }
        ]
      }
    },
    "SubnetC": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.3.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "2",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]        
        },
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Subnet C"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Internet Gateway"
          }
        ]
      }
    },
    "VPCGwAttach1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "RouteTable1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        }
      }
    },
    "Route1": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "VPCGwAttach1",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "RouteTable1"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnetRouteTableAssociationA": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "SubnetA"
        },
        "RouteTableId": {
          "Ref": "RouteTable1"
        }
      }
    },
    "PublicSubnetRouteTableAssociationB": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "SubnetB"
        },
        "RouteTableId": {
          "Ref": "RouteTable1"
        }
      }
    },
    "PublicSubnetRouteTableAssociationC": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "SubnetC"
        },
        "RouteTableId": {
          "Ref": "RouteTable1"
        }
      }
    },
    "DHCPOptions": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "us-west-2.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "DHCPAssoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "DhcpOptionsId": {
          "Ref": "DHCPOptions"
        }
      }
    },
    "NetworkACL": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        }
      }
    },
    "ACL1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "NetworkACL"
        }
      }
    },
    "ACL2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "NetworkACL"
        }
      }
    },
    "SubnetACLAssoc1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkACL"
        },
        "SubnetId": {
          "Ref": "SubnetA"
        }
      }
    },
    "SubnetACLAssoc2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkACL"
        },
        "SubnetId": {
          "Ref": "SubnetB"
        }
      }
    },
    "SubnetACLAssoc3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkACL"
        },
        "SubnetId": {
          "Ref": "SubnetC"
        }
      }
    },
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH and HTTP access",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SG-WebServerFleet"
          }
        ]
      }
    },
    "ElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "DependsOn": "VPCGwAttach1",
      "Properties": {
        "Subnets": [
          {
            "Ref": "SubnetA"
          },
          {
            "Ref": "SubnetB"
          },
          {
            "Ref": "SubnetC"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "3",
          "Interval": "10",
          "Target": "HTTP:80/elbhealthcheck.html",
          "Timeout": "5",
          "UnhealthyThreshold": "2"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "60"
        },
        "CrossZone": "true",
        "SecurityGroups": [
          {
            "Ref": "SecurityGroup"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "80",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP",
            "PolicyNames": [
              "AWSConsole-LBCookieStickinessPolicy-ELB"
            ]
          }
        ],
        "LBCookieStickinessPolicy": [
          {
            "PolicyName": "AWSConsole-LBCookieStickinessPolicy-ELB",
            "CookieExpirationPeriod": "5"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ELB-WebServerFleet"
          }
        ]
      }
    },
    "AutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "Cooldown": "300",
        "DesiredCapacity": "1",
        "HealthCheckGracePeriod": "120",
        "HealthCheckType": "ELB",
        "MaxSize": "1",
        "MinSize": "1",
        "VPCZoneIdentifier": [
          {
            "Ref": "SubnetA"
          },
          {
            "Ref": "SubnetB"
          },
          {
            "Ref": "SubnetC"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "LaunchConfigurationWebServer"
        },
        "LoadBalancerNames": [
          {
            "Ref": "ElasticLoadBalancer"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ASG-WebServerFleet",
            "PropagateAtLaunch": true
          }
        ],
        "TerminationPolicies": [
          "Default"
        ]
      }
    },
    "InstanceProfileWebServer": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "InstanceRoleWebServer"
          }
        ]
      }
    },
    "InstanceRoleWebServer": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "instance-policy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Sid": "S3AdminPolicy",
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "AMIInfo": {
      "Type": "Custom::AMIInfo",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AMIInfoFunction",
            "Arn"
          ]
        },
        "Region": {
          "Ref": "AWS::Region"
        },
        "Architecture": {
          "Fn::FindInMap": [
            "AWSInstanceType2Arch",
            {
              "Ref": "InstanceType"
            },
            "Arch"
          ]
        }
      }
    },
    "AMIInfoFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "S3BucketName"
          },
          "S3Key": "amilookup.zip"
        },
        "Handler": {
          "Fn::Join": [
            "",
            [
              "amilookup",
              ".handler"
            ]
          ]
        },
        "Role": {
          "Fn::GetAtt":
          [
            "LambdaExecutionRole",
            "Arn"
          ]
        },        
        "Runtime": "nodejs6.10",
        "Timeout": "30"
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "Resource": "arn:aws:logs:*:*:*"
                },
                {
                 "Effect": "Allow",
                 "Action": [
                   "ec2:DescribeImages"
                   ],
                 "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "LaunchConfigurationWebServer": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "DependsOn": "VPCGwAttach1",
      "Properties": {
        "AssociatePublicIpAddress": true,
        "ImageId": {
          "Fn::GetAtt": [
            "AMIInfo",
            "Id"
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "IamInstanceProfile": {
          "Ref": "InstanceProfileWebServer"
        },
        "SecurityGroups": [
          {
            "Ref": "SecurityGroup"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 8
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "yum -y update\n",
                "yum install -y httpd\n",
                "aws s3 cp s3://",
                {
                  "Ref": "S3BucketName"
                },
                "/index.html /var/www/html/\n",
                "aws s3 cp s3://",
                {
                  "Ref": "S3BucketName"
                },
                "/elbhealthcheck.html /var/www/html/\n",
                "aws s3 cp s3://",
                {
                  "Ref": "S3BucketName"
                },                
                "/rlam_sl_aws-pictured.jpg /var/www/html/\n",
                "chown -R apache.apache /var/www/html/\n",
                "chmod -R 755 /var/www/html/\n",
                "chkconfig httpd on\n",
                "service httpd start\n"
              ]
            ]
          }
        }
      }
    }
  },
  "Outputs": {
    "URL": {
      "Description": "URL of the Web Server Fleet",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "ElasticLoadBalancer",
                "DNSName"
              ]
            }
          ]
        ]
      }
    },
    "Region": {
      "Description": "AWS Region",
      "Value": {
        "Ref": "AWS::Region"
      }
    },
    "AMIID" : {
      "Description": "The Amazon EC2 instance AMI ID",
      "Value" : {
        "Fn::GetAtt": [
          "AMIInfo",
          "Id"
        ]
      }
    }
  }
}
